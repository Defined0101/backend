services:
  # Tek Backend Servisi (Geliştirme/Production için .env ile yapılandırılır)
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - qdrant
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - frs_network

  # Celery workers & scheduler
  celery_worker:
    build: .
    command: celery -A app.celery_app worker --loglevel=info
    depends_on:
      - backend
      - redis
    env_file:
      - .env
    networks:
      - frs_network

  celery_beat:
    build: .
    command: celery -A app.celery_app beat --loglevel=info
    depends_on:
      - backend
      - redis
    env_file:
      - .env
    networks:
      - frs_network

  # Redis for Celery broker/result backend
  redis:
    image: redis:6
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - frs_network

  # Qdrant vector database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    ports:
      - "6333:6333"
    volumes:
      - ./qdrant/storage:/qdrant/storage
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/collections"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - frs_network

networks:
  frs_network:
    driver: bridge
